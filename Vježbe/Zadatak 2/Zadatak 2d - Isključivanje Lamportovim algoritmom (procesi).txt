Zadatak

Ostvariti sustav paralelnih procesa/dretava. Struktura procesa/dretava dana je sljedećim pseudokodom:

proces proc(i)          /* i  [0..n-1] */ {
   za k = 1 do 5 čini {
      uđi u kritični odsječak
      za m = 1 do 5 čini {
          ispiši(i, k, m)
      }
      iziđi iz kritičnoga odsječka
   }
}

Međusobno isključivanje ostvariti za više procesa/dretava (broj se unosi kao parametar pri pokretanju) međusobnim isključivanjem po Lamportovu algoritmu.
Lamportov algoritam:

zajedničke varijable: TRAŽIM[0..n-1], BROJ[0..n-1]

funkcija uđi_u_kritični_odsječak(i) {
   TRAŽIM[i] = 1
   BROJ[i] = max(BROJ[0],...,BROJ[n-1]) + 1
   TRAŽIM[i] = 0

   za j = 0 do n-1 čini
      dok TRAŽIM[j] <> 0 čini
         ništa
      dok BROJ[j] <> 0 && (BROJ[j] < BROJ[i] || (BROJ[j] == BROJ[i] && j < i)) čini
         ništa
}
 
funkcija iziđi_iz_kritičnoga_odsječka(i) {
   BROJ[i] = 0
}

Upute:

Ako se program rješava s procesima, tada treba zajedničke varijable tako ustrojiti da se prostor za nje zauzme u jedan put i podijeli među njima. Ovo je ključno zbog ograničenoga broja segmenata i velikoga broja korisnika.

Ovisno o opterećenosti računala i broju procesa koji se pokreću, a da bi se vidjele razlike prigodom izvođenja programa, može zatrebati usporiti izvršavanje pozivom:

sleep(1);

nakon: ispiši(i, k, m).
Primjer ispisa:

lumilic@barka:~/2$ ./d.out 3
Dretva: 1, K.O. br: 1 (1/5)
Dretva: 1, K.O. br: 1 (2/5)
Dretva: 1, K.O. br: 1 (3/5)
Dretva: 1, K.O. br: 1 (4/5)
Dretva: 1, K.O. br: 1 (5/5)
Dretva: 2, K.O. br: 1 (1/5)
Dretva: 2, K.O. br: 1 (2/5)
Dretva: 2, K.O. br: 1 (3/5)
Dretva: 2, K.O. br: 1 (4/5)
Dretva: 2, K.O. br: 1 (5/5)
Dretva: 3, K.O. br: 1 (1/5)
Dretva: 3, K.O. br: 1 (2/5)
Dretva: 3, K.O. br: 1 (3/5)
Dretva: 3, K.O. br: 1 (4/5)
Dretva: 3, K.O. br: 1 (5/5)
Dretva: 1, K.O. br: 2 (1/5)
Dretva: 1, K.O. br: 2 (2/5)
(itd.)